import { validate, validateSingle } from '../utils/validation';
import v8n from 'v8n';
import { Application } from '@feathersjs/feathers';
import { AnalyticsFrequency, AnalyticsTypes } from './storeAnalytics';

export const schema = {
  // ID is optional as it is autogenerated by server on creation.
  _id: v8n().optional(
    v8n()
      .string()
      .minLength(2)
      .maxLength(63),
    true,
  ),
  forStore: v8n()
    .string()
    .minLength(2)
    .maxLength(63),
  frequency: v8n().oneOf(Object.values(AnalyticsFrequency)),
  type: v8n().oneOf(Object.values(AnalyticsTypes)),
  value: v8n().number(false),
  timestamp: v8n().datetime(),

  // createdAt is optional as it is added by server on creation.
  createdAt: v8n().optional(
    v8n().datetime(),
    true,
  ),
  modifiedAt: v8n().optional(
    v8n().datetime(),
    true,
  ),
};

export interface StoreAnalyticsAggregation {
  _id: string;
  forStore: string;
  frequency: AnalyticsFrequency;
  type: AnalyticsTypes;
  // We can add a `key` field if the value applies to some specific ID (like product or order), but it's not needed for now
  value: number;
  timestamp: string;
  createdAt: string;
  modifiedAt: string;
}

export const getStoreAnalyticsAggregationSdk = (_client: Application) => {
  return {
    validate: (data: StoreAnalyticsAggregation, ignoreRequired = false) => {
      return validate(schema, data, ignoreRequired);
    },
    validateSingle: (val: any, selector: string) => {
      return validateSingle(schema, val, selector);
    },
  };
};