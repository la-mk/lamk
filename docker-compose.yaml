version: '3.5'

# To speed up dev builds, check https://blog.rocketinsights.com/speeding-up-docker-development-on-the-mac/
# Good article on reverse proxy and dnsmasq: https://ianduffy.ie/blog/2019/02/22/local-development-with-virtual-hosts-and-https/
networks:
  main-network:
    driver: bridge

services:
  reverse-proxy:
    image: traefik:v2.0
    container_name: reverse-proxy
    command:
      # - --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false # Don't expose all services by default, use `traefik.enable`
      - --entrypoints.web.address=:80
    ports:
       # The Web UI (enabled by --api.insecure=true)
       - "8080:8080"
       - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - data-api
      - store-ui
      - backstore-ui
      - object-store
    networks:
      - main-network

  object-store:
    image: minio/minio
    container_name: object-store
    command: server /data
    expose: 
      - 9000
    volumes:
      - ./data:/data
    networks:
      - main-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.object-store.priority=1000
      - traefik.http.routers.object-store.rule=Host(`images.dev.sradevski.com`)
      - traefik.http.services.object-store.loadbalancer.server.port=9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123

  data-api:
    image: lamk/data-api
    build: 
      context: ./packages/data-api
      target: dev
      args: 
        - GPR_TOKEN=$GPR_TOKEN
    container_name: data-api
    volumes:
      - ./packages/data-api:/usr/src/app:delegated
      - /usr/src/app/node_modules #don't bind node_modules, speeding up hot reloads
      - /dev/null:/usr/src/app/.npmrc #We don't want npmrc included, as it will error due to missing token
    networks:
      - main-network
    expose: 
      - 80
    ports:
      - 9229:9229 #debug port
    labels:
      - traefik.enable=true
      - traefik.http.routers.data-api.priority=1000
      - traefik.http.routers.data-api.rule=Host(`api.dev.sradevski.com`)
      - traefik.http.services.data-api.loadbalancer.server.port=80 
    environment: 
      PORT: 80
      HOST: "api.dev.sradevski.com"
      JWT_SECRET: "1234dev"
      MONGODB_DB_NAME: dev
      MONGODB_CONNECTION_STRING: "mongodb+srv://sradevski:Stev4e555@dev-6oiee.mongodb.net/test?retryWrites=true&w=majority"
      STORAGE_ENDPOINT: "images.dev.sradevski.com"
      STORAGE_ACCESS_KEY_ID: minio
      STORAGE_ACCESS_KEY_SECRET: minio123
    
  store-ui:
    image: lamk/store-ui
    build: 
      context: ./packages/store-ui
      target: dev
      args: 
        - GPR_TOKEN=$GPR_TOKEN
    container_name: store-ui
    depends_on: 
      - data-api
    volumes:
      - ./packages/store-ui:/usr/src/app:delegated
      - /usr/src/app/node_modules #don't bind node_modules, speeding up hot reloads
      - /dev/null:/usr/src/app/.npmrc #We don't want npmrc included, as it will error due to missing token
    networks:
      - main-network
    expose: 
      - 80
    labels:
      - traefik.enable=true
      - traefik.http.routers.store-ui.priority=1 #Set to low priority so our services resolve before stores
      - traefik.http.routers.store-ui.rule=HostRegexp(`{subdomain:.+}.dev.sradevski.com`)
      - traefik.http.services.store-ui.loadbalancer.server.port=80 
    environment: 
      API_ENDPOINT: "http://api.dev.sradevski.com"
      PORT: 80

  backstore-ui:
    image: lamk/backstore-ui
    build: 
      context: ./packages/backstore-ui
      target: dev
      args: 
        - GPR_TOKEN=$GPR_TOKEN
    container_name: backstore-ui
    depends_on: 
      - data-api
    volumes:
      - ./packages/backstore-ui:/usr/src/app:delegated
      - /usr/src/app/node_modules #don't bind node_modules, speeding up hot reloads
      - /dev/null:/usr/src/app/.npmrc #We don't want npmrc included, as it will error due to missing token
    networks:
      - main-network
    expose: 
      - 80
    labels:
      - traefik.enable=true
      - traefik.http.routers.backstore-ui.priority=1000
      - traefik.http.routers.backstore-ui.rule=Host(`back.dev.sradevski.com`)
      - traefik.http.services.backstore-ui.loadbalancer.server.port=80 
    # CRA demands that all envvars start with REACT_APP_*
    environment: 
      REACT_APP_API_ENDPOINT: "http://api.dev.sradevski.com"
      REACT_APP_PORT: 80